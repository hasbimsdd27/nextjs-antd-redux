{"version":3,"file":"static/webpack/static\\development\\pages\\class.js.aa0dd5fbe99d7d810492.hot-update.js","sources":["webpack:///./_components/ClassPage/listClass.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table } from \"antd\";\r\n\r\nconst columns = [\r\n    {\r\n        title: \"Name\",\r\n        dataIndex: \"name\",\r\n        sorter: true,\r\n        render: name => `${name.first} ${name.last}`,\r\n        width: \"20%\"\r\n    },\r\n    {\r\n        title: \"Action\",\r\n        key: \"action\",\r\n        render: (text, name) => <h1>Halo {name}</h1>\r\n    }\r\n];\r\n\r\nconst listClass = () => {\r\n    const [classData, setClassData] = useState([]);\r\n    const [pagination, setPagination] = useState({});\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        fetch();\r\n    }, []);\r\n\r\n    const handleTableChange = (pagination, filters, sorter) => {\r\n        const pager = { ...pagination };\r\n        pager.current = pagination.current;\r\n        setPagination(pager);\r\n        fetch({\r\n            results: pagination.pageSize,\r\n            page: pagination.current,\r\n            sortField: sorter.field,\r\n            sortOrder: sorter.order,\r\n            ...filters\r\n        });\r\n    };\r\n\r\n    const fetch = (params = {}) => {\r\n        // console.log(\"params:\", params);\r\n        setLoading(true);\r\n        const config = {\r\n            method: \"get\",\r\n            url: \"https://randomuser.me/api\",\r\n            params: {\r\n                results: 10,\r\n                ...params\r\n            }\r\n        };\r\n        axios(config).then(data => {\r\n            // console.log(data.data.results);\r\n            const pagination = { ...pagination };\r\n            // Read total count from server\r\n            // pagination.total = data.totalCount;\r\n            pagination.total = 200;\r\n\r\n            setLoading(false);\r\n            setClassData(data.data.results);\r\n            setPagination(pagination);\r\n        });\r\n    };\r\n    return (\r\n        <Table\r\n            columns={columns}\r\n            rowKey={record => record.login.uuid}\r\n            dataSource={classData}\r\n            pagination={pagination}\r\n            loading={loading}\r\n            onChange={handleTableChange}\r\n        />\r\n    );\r\n};\r\n\r\nexport default listClass;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AAQA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AACA;AAMA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAHA;AAQA;AACA;AACA;AAEA;AACA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;;;;A","sourceRoot":""}