{"version":3,"file":"static/webpack/static\\development\\pages\\class.js.7a9b400bdb5e26be653b.hot-update.js","sources":["webpack:///./_components/ClassPage/listClass.js","webpack:///./_components/ClassPage/updateClass.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table } from \"antd\";\r\n\r\nimport UpdateClass from \"./updateClass\";\r\nimport DeleteClass from \"./deleteClass\";\r\n\r\nconst columns = [\r\n    {\r\n        title: \"Name\",\r\n        dataIndex: \"name\",\r\n        sorter: true,\r\n        render: name => `${name.first} ${name.last}`,\r\n        width: \"20%\"\r\n    },\r\n    {\r\n        title: \"Action\",\r\n        dataIndex: \"name\",\r\n        key: \"operation\",\r\n        fixed: \"right\",\r\n        width: 100,\r\n        render: name => {\r\n            return (\r\n                <>\r\n                    {\" \"}\r\n                    <UpdateClass nameData={name.first} />\r\n                    <DeleteClass nameData={name.first} />\r\n                </>\r\n            );\r\n        }\r\n    }\r\n];\r\n\r\nconst listClass = () => {\r\n    const [classData, setClassData] = useState([]);\r\n    const [pagination, setPagination] = useState({});\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        fetch();\r\n    }, []);\r\n\r\n    const handleTableChange = (pagination, filters, sorter) => {\r\n        const pager = { ...pagination };\r\n        pager.current = pagination.current;\r\n        setPagination(pager);\r\n        fetch({\r\n            results: pagination.pageSize,\r\n            page: pagination.current,\r\n            sortField: sorter.field,\r\n            sortOrder: sorter.order,\r\n            ...filters\r\n        });\r\n    };\r\n\r\n    const fetch = (params = {}) => {\r\n        // console.log(\"params:\", params);\r\n        setLoading(true);\r\n        const config = {\r\n            method: \"get\",\r\n            url: \"https://randomuser.me/api\",\r\n            params: {\r\n                results: 10,\r\n                ...params\r\n            }\r\n        };\r\n        axios(config).then(data => {\r\n            // console.log(data.data.results);\r\n            const pagination = { ...pagination };\r\n            // Read total count from server\r\n            // pagination.total = data.totalCount;\r\n            pagination.total = 200;\r\n\r\n            setLoading(false);\r\n            setClassData(data.data.results);\r\n            setPagination(pagination);\r\n        });\r\n    };\r\n    return (\r\n        <Table\r\n            columns={columns}\r\n            rowKey={record => record.login.uuid}\r\n            dataSource={classData}\r\n            pagination={pagination}\r\n            loading={loading}\r\n            onChange={handleTableChange}\r\n        />\r\n    );\r\n};\r\n\r\nexport default listClass;\r\n","import React, { useState } from \"react\";\r\nimport { Modal, Button, Form, Input } from \"antd\";\r\nimport { EditOutlined } from \"@ant-design/icons\";\r\n\r\nconst updateClassModal = () => {\r\n    const [modal, showModal] = useState(false);\r\n    const handleOk = e => {\r\n        showModal(false);\r\n    };\r\n\r\n    const handleCancel = e => {\r\n        showModal(false);\r\n    };\r\n    const onFinish = values => {\r\n        // console.log(\"Success:\", values);\r\n        showModal(false);\r\n    };\r\n\r\n    const CloseModal = () => {\r\n        showModal(true);\r\n    };\r\n\r\n    const onFinishFailed = errorInfo => {\r\n        // console.log(\"Failed:\", errorInfo);\r\n    };\r\n    const layout = {\r\n        labelCol: { span: 8 },\r\n        wrapperCol: { span: 16 }\r\n    };\r\n    const tailLayout = {\r\n        wrapperCol: { offset: 8, span: 16 }\r\n    };\r\n    return (\r\n        <div>\r\n            <Button\r\n                type=\"primary\"\r\n                style={{\r\n                    marginBottom: 16\r\n                }}\r\n                onClick={CloseModal}\r\n            >\r\n                <EditOutlined /> Add a Class\r\n            </Button>\r\n            <Modal\r\n                title=\"Basic Modal\"\r\n                visible={modal}\r\n                onOk={handleOk}\r\n                onCancel={handleCancel}\r\n                footer={null}\r\n            >\r\n                <Form\r\n                    {...layout}\r\n                    name=\"basic\"\r\n                    onFinish={onFinish}\r\n                    onFinishFailed={onFinishFailed}\r\n                >\r\n                    <Form.Item\r\n                        label=\"Name\"\r\n                        name=\"name\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"Please input class name!\"\r\n                            }\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item {...tailLayout}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            Add Class\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default updateClassModal;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAdA;AACA;AAiBA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAHA;AAQA;AACA;AACA;AAEA;AACA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1FA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AAAA;AAAA;AAAA;AADA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AADA;AAGA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AAEA;AACA;AAFA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;;;;A","sourceRoot":""}